#!/bin/bash

# Script de despliegue manual paso a paso
EC2_IP="54.212.80.37"
KEY_FILE="directiva-agricola-key.pem"

echo "🚀 Despliegue manual paso a paso en AWS EC2"
echo "📍 IP: $EC2_IP"
echo "👤 Usuario: ec2-user"
echo ""

echo "Paso 1: Conectarse a la instancia EC2"
echo "Ejecuta: ssh -i $KEY_FILE ec2-user@$EC2_IP"
echo ""

echo "Paso 2: Una vez conectado, ejecutar estos comandos:"
echo ""
echo "# Actualizar sistema"
echo "sudo dnf update -y"
echo ""
echo "# Instalar Python 3.9 y dependencias"
echo "sudo dnf install -y python3.9 python3.9-pip python3.9-devel gcc gcc-c++ nginx git curl"
echo ""
echo "# Instalar PostgreSQL client"
echo "sudo dnf install -y postgresql15 postgresql15-devel"
echo ""
echo "# Crear directorio del proyecto"
echo "sudo mkdir -p /var/www/directiva_agricola"
echo "sudo chown ec2-user:ec2-user /var/www/directiva_agricola"
echo "cd /var/www/directiva_agricola"
echo ""
echo "# Clonar repositorio"
echo "git clone https://github.com/DirectivaSoftware01/DirectivaAgricola.git ."
echo "sudo chown -R ec2-user:ec2-user /var/www/directiva_agricola"
echo ""
echo "# Crear entorno virtual"
echo "python3.9 -m venv venv"
echo "source venv/bin/activate"
echo ""
echo "# Instalar dependencias"
echo "pip install --upgrade pip"
echo "pip install -r requirements.txt"
echo ""
echo "# Crear configuración de producción"
echo "cat > directiva_agricola/settings_production.py << 'EOL'"
echo "import os"
echo "from pathlib import Path"
echo "from .settings import *"
echo ""
echo "# Configuración de producción"
echo "DEBUG = False"
echo "ALLOWED_HOSTS = ['54.212.80.37', 'directiva-agricola.com', 'www.directiva-agricola.com']"
echo ""
echo "# Configuración de base de datos PostgreSQL"
echo "DATABASES = {"
echo "    'default': {"
echo "        'ENGINE': 'django.db.backends.postgresql',"
echo "        'NAME': os.environ.get('DS_DB_NAME', 'directiva_agricola'),"
echo "        'USER': os.environ.get('RDS_USERNAME', 'postgres'),"
echo "        'PASSWORD': os.environ.get('RDS_PASSWORD', 'Directiva2024!'),"
echo "        'HOST': os.environ.get('RDS_HOSTNAME', 'directiva-agricola-db.ch0uaaay0qlf.us-west-2.rds.amazonaws.com'),"
echo "        'PORT': os.environ.get('RDS_PORT', '5432'),"
echo "        'ATOMIC_REQUESTS': True,"
echo "        'TIME_ZONE': 'America/Mexico_City',"
echo "        'OPTIONS': {},"
echo "        'CONN_MAX_AGE': 0,"
echo "        'AUTOCOMMIT': True,"
echo "        'CONN_HEALTH_CHECKS': False,"
echo "        'TEST': {"
echo "            'CHARSET': None,"
echo "            'COLLATION': None,"
echo "            'MIGRATE': True,"
echo "            'MIRROR': None,"
echo "            'NAME': None"
echo "        },"
echo "    },"
echo "    'administracion': {"
echo "        'ENGINE': 'django.db.backends.postgresql',"
echo "        'NAME': os.environ.get('RDS_ADMIN_DB_NAME', 'directiva_administracion'),"
echo "        'USER': os.environ.get('RDS_USERNAME', 'postgres'),"
echo "        'PASSWORD': os.environ.get('RDS_PASSWORD', 'Directiva2024!'),"
echo "        'HOST': os.environ.get('RDS_HOSTNAME', 'directiva-agricola-db.ch0uaaay0qlf.us-west-2.rds.amazonaws.com'),"
echo "        'PORT': os.environ.get('RDS_PORT', '5432'),"
echo "        'ATOMIC_REQUESTS': True,"
echo "        'TIME_ZONE': 'America/Mexico_City',"
echo "        'OPTIONS': {},"
echo "        'CONN_MAX_AGE': 0,"
echo "        'AUTOCOMMIT': True,"
echo "        'CONN_HEALTH_CHECKS': False,"
echo "        'TEST': {"
echo "            'CHARSET': None,"
echo "            'COLLATION': None,"
echo "            'MIGRATE': True,"
echo "            'MIRROR': None,"
echo "            'NAME': None"
echo "        },"
echo "    }"
echo "}"
echo ""
echo "# Configuración de archivos estáticos"
echo "STATIC_URL = '/static/'"
echo "STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')"
echo ""
echo "# Configuración de archivos multimedia"
echo "MEDIA_URL = '/media/'"
echo "MEDIA_ROOT = os.path.join(BASE_DIR, 'media')"
echo ""
echo "# Configuración de seguridad"
echo "SECRET_KEY = os.environ.get('SECRET_KEY', 'directiva-secret-key-2024-production')"
echo "SECURE_BROWSER_XSS_FILTER = True"
echo "SECURE_CONTENT_TYPE_NOSNIFF = True"
echo "X_FRAME_OPTIONS = 'DENY'"
echo "EOL"
echo ""
echo "# Crear directorio de logs"
echo "sudo mkdir -p /var/log/directiva_agricola"
echo "sudo chown ec2-user:ec2-user /var/log/directiva_agricola"
echo ""
echo "# Configurar variables de entorno"
echo "export DS_DB_NAME='directiva_agricola'"
echo "export RDS_ADMIN_DB_NAME='directiva_administracion'"
echo "export RDS_USERNAME='postgres'"
echo "export RDS_PASSWORD='Directiva2024!'"
echo "export RDS_HOSTNAME='directiva-agricola-db.ch0uaaay0qlf.us-west-2.rds.amazonaws.com'"
echo "export RDS_PORT='5432'"
echo "export SECRET_KEY='directiva-secret-key-2024-production'"
echo ""
echo "# Crear bases de datos RDS"
echo "python3.9 -c \""
echo "import psycopg2"
echo "from psycopg2.extensions import ISOLATION_LEVEL_AUTOCOMMIT"
echo ""
echo "try:"
echo "    conn = psycopg2.connect("
echo "        host='directiva-agricola-db.ch0uaaay0qlf.us-west-2.rds.amazonaws.com',"
echo "        port=5432,"
echo "        user='postgres',"
echo "        password='Directiva2024!',"
echo "        database='postgres'"
echo "    )"
echo "    conn.set_isolation_level(ISOLATION_LEVEL_AUTOCOMMIT)"
echo "    cursor = conn.cursor()"
echo "    "
echo "    try:"
echo "        cursor.execute('CREATE DATABASE directiva_administracion;')"
echo "        print('✅ Base de datos directiva_administracion creada')"
echo "    except psycopg2.errors.DuplicateDatabase:"
echo "        print('ℹ️  Base de datos directiva_administracion ya existe')"
echo "    "
echo "    try:"
echo "        cursor.execute('CREATE DATABASE directiva_agricola;')"
echo "        print('✅ Base de datos directiva_agricola creada')"
echo "    except psycopg2.errors.DuplicateDatabase:"
echo "        print('ℹ️  Base de datos directiva_agricola ya existe')"
echo "    "
echo "    cursor.close()"
echo "    conn.close()"
echo "    print('✅ Conexión a RDS exitosa')"
echo "    "
echo "except Exception as e:"
echo "    print(f'❌ Error conectando a RDS: {e}')"
echo "    exit(1)"
echo "\""
echo ""
echo "# Ejecutar migraciones"
echo "python3.9 manage.py migrate --settings=directiva_agricola.settings_production --database=administracion"
echo "python3.9 manage.py migrate --settings=directiva_agricola.settings_production --database=default"
echo ""
echo "# Recopilar archivos estáticos"
echo "python3.9 manage.py collectstatic --noinput --settings=directiva_agricola.settings_production"
echo ""
echo "# Crear usuarios"
echo "python3.9 manage.py shell --settings=directiva_agricola.settings_production << 'EOF'"
echo "from django.contrib.auth import get_user_model"
echo "from administracion.models import UsuarioAdministracion"
echo ""
echo "User = get_user_model()"
echo ""
echo "# Crear usuario administrador"
echo "admin_user, created = UsuarioAdministracion.objects.using('administracion').get_or_create("
echo "    username='admin',"
echo "    defaults={"
echo "        'first_name': 'Administrador',"
echo "        'last_name': 'Sistema',"
echo "        'email': 'admin@directiva.com',"
echo "        'is_staff': True,"
echo "        'is_active': True"
echo "    }"
echo ")"
echo "if created:"
echo "    admin_user.set_password('Directiva2024!')"
echo "    admin_user.save()"
echo "    print('✅ Usuario administrador creado')"
echo "else:"
echo "    print('ℹ️  Usuario administrador ya existe')"
echo ""
echo "# Crear usuario supervisor"
echo "supervisor_user, created = User.objects.using('default').get_or_create("
echo "    username='supervisor',"
echo "    defaults={"
echo "        'first_name': 'Supervisor',"
echo "        'last_name': 'Sistema',"
echo "        'email': 'supervisor@directiva.com',"
echo "        'is_superuser': True,"
echo "        'is_staff': True,"
echo "        'is_active': True"
echo "    }"
echo ")"
echo "if created:"
echo "    supervisor_user.set_password('Directivasbmj1*')"
echo "    supervisor_user.save()"
echo "    print('✅ Usuario supervisor creado')"
echo "else:"
echo "    print('ℹ️  Usuario supervisor ya existe')"
echo "EOF"
echo ""
echo "# Configurar Gunicorn"
echo "cat > gunicorn.conf.py << 'EOL'"
echo "bind = \"127.0.0.1:8000\""
echo "workers = 3"
echo "worker_class = \"sync\""
echo "worker_connections = 1000"
echo "timeout = 30"
echo "keepalive = 2"
echo "max_requests = 1000"
echo "max_requests_jitter = 100"
echo "preload_app = True"
echo "EOL"
echo ""
echo "# Crear servicio systemd"
echo "sudo tee /etc/systemd/system/directiva-agricola.service > /dev/null << 'EOL'"
echo "[Unit]"
echo "Description=Directiva Agricola Gunicorn daemon"
echo "After=network.target"
echo ""
echo "[Service]"
echo "User=ec2-user"
echo "Group=ec2-user"
echo "WorkingDirectory=/var/www/directiva_agricola"
echo "Environment=\"PATH=/var/www/directiva_agricola/venv/bin\""
echo "Environment=\"DS_DB_NAME=directiva_agricola\""
echo "Environment=\"RDS_ADMIN_DB_NAME=directiva_administracion\""
echo "Environment=\"RDS_USERNAME=postgres\""
echo "Environment=\"RDS_PASSWORD=Directiva2024!\""
echo "Environment=\"RDS_HOSTNAME=directiva-agricola-db.ch0uaaay0qlf.us-west-2.rds.amazonaws.com\""
echo "Environment=\"RDS_PORT=5432\""
echo "Environment=\"SECRET_KEY=directiva-secret-key-2024-production\""
echo "ExecStart=/var/www/directiva_agricola/venv/bin/gunicorn --config gunicorn.conf.py directiva_agricola.wsgi:application"
echo "ExecReload=/bin/kill -s HUP \$MAINPID"
echo "Restart=on-failure"
echo ""
echo "[Install]"
echo "WantedBy=multi-user.target"
echo "EOL"
echo ""
echo "# Habilitar y iniciar servicio"
echo "sudo systemctl daemon-reload"
echo "sudo systemctl enable directiva-agricola"
echo "sudo systemctl start directiva-agricola"
echo ""
echo "# Configurar Nginx"
echo "sudo tee /etc/nginx/conf.d/directiva-agricola.conf > /dev/null << 'EOL'"
echo "server {"
echo "    listen 80;"
echo "    server_name 54.212.80.37 directiva-agricola.com www.directiva-agricola.com;"
echo "    "
echo "    client_max_body_size 100M;"
echo "    "
echo "    location /static/ {"
echo "        alias /var/www/directiva_agricola/staticfiles/;"
echo "        expires 30d;"
echo "        add_header Cache-Control \"public, immutable\";"
echo "    }"
echo "    "
echo "    location /media/ {"
echo "        alias /var/www/directiva_agricola/media/;"
echo "        expires 30d;"
echo "        add_header Cache-Control \"public, immutable\";"
echo "    }"
echo "    "
echo "    location / {"
echo "        proxy_pass http://127.0.0.1:8000;"
echo "        proxy_set_header Host \$host;"
echo "        proxy_set_header X-Real-IP \$remote_addr;"
echo "        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;"
echo "        proxy_set_header X-Forwarded-Proto \$scheme;"
echo "        proxy_connect_timeout 30s;"
echo "        proxy_send_timeout 30s;"
echo "        proxy_read_timeout 30s;"
echo "    }"
echo "}"
echo "EOL"
echo ""
echo "# Habilitar sitio y reiniciar Nginx"
echo "sudo systemctl enable nginx"
echo "sudo systemctl start nginx"
echo ""
echo "# Crear empresa de prueba"
echo "python3.9 manage.py crear_empresa_postgresql \\"
echo "    --razon-social=\"EMPRESA DEMOSTRACION\" \\"
echo "    --rfc=\"DEMO250901XXX\" \\"
echo "    --direccion=\"Dirección de prueba\" \\"
echo "    --telefono=\"555-1234\" \\"
echo "    --email=\"demo@directiva.com\" \\"
echo "    --ciclo-actual=\"2025\" \\"
echo "    --settings=directiva_agricola.settings_production"
echo ""
echo "# Verificar estado"
echo "sudo systemctl status directiva-agricola"
echo "sudo systemctl status nginx"
echo "curl -I http://localhost"
echo ""
echo "🎉 ¡Despliegue completado!"
echo "🌐 Aplicación disponible en: http://54.212.80.37"
echo "🔑 Usuario administrador: admin / Directiva2024!"
echo "🔑 Usuario supervisor: supervisor / Directivasbmj1*"
