# Generated by Django 5.2.5 on 2025-09-13 00:56

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0038_add_regimen_fiscal_to_emisor'),
    ]

    operations = [
        migrations.AlterField(
            model_name='emisor',
            name='regimen_fiscal',
            field=models.CharField(choices=[('601', '601 - General de Ley Personas Morales'), ('603', '603 - Personas Morales con Fines no Lucrativos'), ('605', '605 - Sueldos y Salarios e Ingresos Asimilados a Salarios'), ('606', '606 - Arrendamiento'), ('608', '608 - Demás ingresos'), ('610', '610 - Residentes en el Extranjero sin Establecimiento Permanente en México'), ('611', '611 - Ingresos por Dividendos (socios y accionistas)'), ('612', '612 - Personas Físicas con Actividades Empresariales y Profesionales'), ('614', '614 - Ingresos por intereses'), ('615', '615 - Régimen de los ingresos por obtención de premios'), ('616', '616 - Sin obligaciones fiscales'), ('620', '620 - Sociedades Cooperativas de Producción que optan por diferir sus ingresos'), ('621', '621 - Incorporación Fiscal'), ('622', '622 - Actividades Agrícolas, Ganaderas, Silvícolas y Pesqueras'), ('623', '623 - Opcional para Grupos de Sociedades'), ('624', '624 - Coordinados'), ('625', '625 - Régimen de las Actividades Empresariales con ingresos a través de Plataformas Tecnológicas'), ('626', '626 - Régimen Simplificado de Confianza'), ('628', '628 - Hidrocarburos'), ('629', '629 - De los Regímenes Fiscales Preferentes y de las Empresas Multinacionales'), ('630', '630 - Enajenación de acciones en bolsa de valores'), ('615', '615 - Régimen de los ingresos por obtención de premios')], default='626', help_text='Régimen fiscal según el SAT', max_length=3, verbose_name='Régimen Fiscal'),
        ),
        migrations.CreateModel(
            name='Factura',
            fields=[
                ('serie', models.CharField(help_text='Serie de la factura', max_length=10, verbose_name='Serie')),
                ('folio', models.AutoField(help_text='Folio consecutivo de la factura', primary_key=True, serialize=False, verbose_name='Folio')),
                ('fecha_emision', models.DateTimeField(help_text='Fecha y hora de emisión de la factura', verbose_name='Fecha de Emisión')),
                ('lugar_expedicion', models.CharField(help_text='Código postal del lugar de expedición', max_length=5, verbose_name='Lugar de Expedición')),
                ('uso_cfdi', models.CharField(choices=[('G01', 'G01 - Adquisición de mercancías'), ('G02', 'G02 - Devoluciones, descuentos o bonificaciones'), ('G03', 'G03 - Gastos en general'), ('I01', 'I01 - Construcciones'), ('I02', 'I02 - Mobilario y equipo de oficina por inversiones'), ('I03', 'I03 - Equipo de transporte'), ('I04', 'I04 - Equipo de computo y accesorios'), ('I05', 'I05 - Dados, troqueles, moldes, matrices y herramental'), ('I06', 'I06 - Comunicaciones telefónicas'), ('I07', 'I07 - Comunicaciones satelitales'), ('I08', 'I08 - Otra maquinaria y equipo'), ('D01', 'D01 - Honorarios médicos, dentales y gastos hospitalarios'), ('D02', 'D02 - Gastos médicos por incapacidad o discapacidad'), ('D03', 'D03 - Gastos funerales'), ('D04', 'D04 - Donativos'), ('D05', 'D05 - Intereses reales efectivamente pagados por créditos hipotecarios (casa habitación)'), ('D06', 'D06 - Aportaciones voluntarias al SAR'), ('D07', 'D07 - Primas por seguros de gastos médicos'), ('D08', 'D08 - Gastos de transportación escolar obligatoria'), ('D09', 'D09 - Depósitos en cuentas para el ahorro, primas que tengan como base planes de pensiones'), ('D10', 'D10 - Pagos por servicios educativos (colegiaturas)'), ('P01', 'P01 - Por definir')], help_text='Uso del comprobante fiscal', max_length=3, verbose_name='Uso CFDI')),
                ('exportacion', models.CharField(choices=[('01', '01 - No aplica'), ('02', '02 - Definitiva (bloqueado)'), ('03', '03 - Temporal')], default='01', help_text='Tipo de exportación', max_length=2, verbose_name='Exportación')),
                ('metodo_pago', models.CharField(choices=[('PUE', 'PUE - Pago en una sola exhibición'), ('PPD', 'PPD - Pago en parcialidades o diferido')], default='PUE', help_text='Método de pago', max_length=3, verbose_name='Método de Pago')),
                ('moneda', models.CharField(default='MXN', help_text='Moneda de la factura', max_length=3, verbose_name='Moneda')),
                ('forma_pago', models.CharField(choices=[('01', '01 - Efectivo'), ('02', '02 - Cheque nominativo'), ('03', '03 - Transferencia electrónica de fondos'), ('04', '04 - Tarjeta de crédito'), ('05', '05 - Monedero electrónico'), ('06', '06 - Dinero electrónico'), ('08', '08 - Vales de despensa'), ('12', '12 - Dación en pago'), ('13', '13 - Pago por subrogación'), ('14', '14 - Pago por consignación'), ('15', '15 - Condonación'), ('17', '17 - Compensación'), ('23', '23 - Novación'), ('24', '24 - Confusión'), ('25', '25 - Remisión de deuda'), ('26', '26 - Prescripción o caducidad'), ('27', '27 - A satisfacción del acreedor'), ('28', '28 - Tarjeta de débito'), ('29', '29 - Tarjeta de servicios'), ('30', '30 - Aplicación de anticipos'), ('31', '31 - Intermediario pagos'), ('99', '99 - Por definir')], default='99', help_text='Forma de pago', max_length=2, verbose_name='Forma de Pago')),
                ('tipo_cambio', models.DecimalField(decimal_places=4, default=1.0, help_text='Tipo de cambio', max_digits=10, verbose_name='Tipo de Cambio')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0.0, help_text='Subtotal de la factura', max_digits=15, verbose_name='Subtotal')),
                ('impuesto', models.DecimalField(decimal_places=2, default=0.0, help_text='Total de impuestos', max_digits=15, verbose_name='Impuesto')),
                ('total', models.DecimalField(decimal_places=2, default=0.0, help_text='Total de la factura', max_digits=15, verbose_name='Total')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('emisor', models.ForeignKey(help_text='Emisor de la factura', on_delete=django.db.models.deletion.PROTECT, to='core.emisor', verbose_name='Emisor')),
                ('receptor', models.ForeignKey(help_text='Cliente receptor de la factura', on_delete=django.db.models.deletion.PROTECT, to='core.cliente', verbose_name='Receptor')),
                ('usuario_creacion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='facturas_creadas', to=settings.AUTH_USER_MODEL, verbose_name='Usuario de Creación')),
                ('usuario_modificacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='facturas_modificadas', to=settings.AUTH_USER_MODEL, verbose_name='Usuario de Modificación')),
            ],
            options={
                'verbose_name': 'Factura',
                'verbose_name_plural': 'Facturas',
                'db_table': 'facturas',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='FacturaDetalle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_identificacion', models.CharField(help_text='Número de identificación del producto', max_length=50, verbose_name='No. Identificación')),
                ('concepto', models.CharField(help_text='Descripción del concepto', max_length=200, verbose_name='Concepto')),
                ('cantidad', models.DecimalField(decimal_places=2, help_text='Cantidad del producto', max_digits=10, verbose_name='Cantidad')),
                ('precio', models.DecimalField(decimal_places=2, help_text='Precio unitario del producto', max_digits=15, verbose_name='Precio')),
                ('clave_prod_serv', models.CharField(help_text='Clave del producto o servicio', max_length=20, verbose_name='ClaveProdServ')),
                ('unidad', models.CharField(help_text='Unidad de medida', max_length=20, verbose_name='Unidad')),
                ('objeto_impuesto', models.CharField(choices=[('01', '01 - No objeto del impuesto'), ('02', '02 - Sí objeto del impuesto'), ('03', '03 - Sí objeto del impuesto y no obligado al desglose')], default='02', help_text='Objeto del impuesto', max_length=2, verbose_name='Objeto de Impuesto')),
                ('importe', models.DecimalField(decimal_places=2, help_text='Importe del concepto (cantidad * precio)', max_digits=15, verbose_name='Importe')),
                ('impuesto_concepto', models.DecimalField(decimal_places=2, default=0.0, help_text='Impuesto del concepto', max_digits=15, verbose_name='Impuesto')),
                ('factura', models.ForeignKey(help_text='Factura a la que pertenece el detalle', on_delete=django.db.models.deletion.CASCADE, related_name='detalles', to='core.factura', verbose_name='Factura')),
                ('producto_servicio', models.ForeignKey(help_text='Producto o servicio facturado', on_delete=django.db.models.deletion.PROTECT, to='core.productoservicio', verbose_name='Producto/Servicio')),
            ],
            options={
                'verbose_name': 'Detalle de Factura',
                'verbose_name_plural': 'Detalles de Factura',
                'db_table': 'factura_detalles',
                'ordering': ['id'],
            },
        ),
        migrations.AddIndex(
            model_name='factura',
            index=models.Index(fields=['serie', 'folio'], name='facturas_serie_583a53_idx'),
        ),
        migrations.AddIndex(
            model_name='factura',
            index=models.Index(fields=['fecha_emision'], name='facturas_fecha_e_2669a7_idx'),
        ),
        migrations.AddIndex(
            model_name='factura',
            index=models.Index(fields=['emisor'], name='facturas_emisor__a4b343_idx'),
        ),
        migrations.AddIndex(
            model_name='factura',
            index=models.Index(fields=['receptor'], name='facturas_recepto_d098e8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='factura',
            unique_together={('serie', 'folio')},
        ),
    ]
